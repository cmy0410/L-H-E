```python
def heuristics_v2(distance_matrix, demands):
    n = distance_matrix.size(0)
    
    # Normalize demands
    max_demand = 1.0 - demands[0]
    demands_norm = demands / demands.sum()
    
    # Calculate the mean distance
    mean_distance = distance_matrix.mean()
    
    # Calculate the attentional bias matrix
    attentional_bias = distance_matrix / mean_distance * max_demand / demands_norm
    attentional_bias[torch.isnan(attentional_bias) | torch.isinf(attentional_bias)] = 0
    
    return attentional_bias
```
