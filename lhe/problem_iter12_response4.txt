```python
def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    # Normalize demand based on the maximum demand
    max_demand = demands.max().item()
    normalized_demands = demands / max_demand
    
    # Calculate the attentional bias
    attentional_bias = distance_matrix / normalized_demands.unsqueeze(1)

    # Set negative values to -inf
    attentional_bias[attentional_bias < 0] = float('-inf')
    
    return attentional_bias
```
