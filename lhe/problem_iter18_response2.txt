```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray, demands: np.ndarray) -> np.ndarray:
    n = distance_matrix.shape[0]

    # Calculate the maximum possible demand that can be accommodated
    max_demand = 1.0 - demands[0]

    # Calculate the mean distance
    mean_distance = np.mean(distance_matrix)

    # Calculate the attentional bias matrix using efficient vectorized implementation
    attentional_bias = distance_matrix / (mean_distance * demands[:, np.newaxis])

    # Set zero values for NaN and Inf
    attentional_bias = np.nan_to_num(attentional_bias, nan=0.0, posinf=0.0, neginf=0.0)

    return attentional_bias
```
```
