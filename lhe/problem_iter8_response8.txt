```python
def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    # Normalize demands based on the maximum demand
    max_demand = demands.max().item()
    normalized_demands = demands / max_demand

    # Calculate the attentional bias
    attentional_bias = distance_matrix / normalized_demands.unsqueeze(1)

    # Set undesirable edges to negative values
    attentional_bias[attentional_bias <= 0] = -float('inf')

    # Set self-edges values to 0
    attentional_bias[torch.eye(distance_matrix.shape[0], dtype=torch.bool)] = 0

    return attentional_bias
```
