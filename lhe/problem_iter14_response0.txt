```python
def heuristics_v2(distance_matrix: torch.Tensor, demands: torch.Tensor) -> torch.Tensor:
    n = distance_matrix.size(0)

    # Normalize demands
    total_demand = torch.sum(demands)
    demands_norm = demands / total_demand

    # Calculate the attentional bias matrix
    attentional_bias = distance_matrix / torch.mean(distance_matrix) * (1 - demands_norm[0]) / demands_norm
    attentional_bias[torch.isnan(attentional_bias) | torch.isinf(attentional_bias)] = 0

    return attentional_bias
```
